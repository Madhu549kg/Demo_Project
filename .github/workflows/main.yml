# Name of the workflow
name: Build and Deploy .NET Framework App to IIS

# This runs when you push code to your main branch (e.g., 'master' or 'main')
on:
  push:
    branches: [ master ] # Change 'master' to 'main' if that is your primary branch
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build-and-deploy:
    # This is the critical line that tells GitHub to use your server
    runs-on: self-hosted

    steps:
    # 1. Gets a copy of your code onto the runner
    - name: Checkout Repository
      uses: actions/checkout@v4

    # 2. Sets up MSBuild, the correct build tool for .NET Framework
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # 3. Sets up NuGet, for restoring project dependencies
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    # 4. Restores all the packages your solution needs to build
    - name: Restore NuGet Packages
      run: nuget restore Demo_Project.sln # <-- IMPORTANT: EDIT THIS LINE

    # 5. Builds your project and creates a deployable .zip package
    - name: Build and Publish with MSBuild
      run: |
        msbuild.exe Demo_Project.sln /nologo /nr:false /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="${{ github.workspace }}\deploy.zip"
        # <-- IMPORTANT: EDIT THIS LINE

    # 6. Deploys the created .zip file to your IIS website
    - name: Deploy to IIS
      uses: microsoft/web-deploy@v2
      with:
        website-name: ${{ secrets.IIS_WEBSITE_NAME }}
        package: ${{ github.workspace }}\deploy.zip
